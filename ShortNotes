The Dockerfile:
Docker can build images automatically by reading the instructions from a Dockerfile. 
A Dockerfile is a text document that contains all the commands a user could call on the command line to assemble an image. 
Using docker build users can create an automated build that executes several command-line instructions in succession.

Sample Example:[More information from https://docs.docker.com/engine/reference/builder/]
==============
FROM alpine:latest  # The FROM command tells Docker which base you would like to use for your image. Ex: Iamge:alpine && releasetag: latest
LABEL maintainer="Russ McKendrick <russ@mckendrick.io>"  #The LABEL command can be used to add extra information to the image. 
                                                          This information can be anything from a version number to a description.
LABEL description="This example Dockerfile installs NGINX." #You can view the containers' labels with the docker inspect command:
                                                            $ docker image inspect <IMAGE_ID> 
RUN apk add --update nginx && \  #RUN command is where we interact with our image to install software and run scripts, commands, and other tasks.
        rm -rf /var/cache/apk/* && \ # && operator to move on to the next command if the previous command was successful. \ so I can split the command over multiple lines, making it easy to read.
        mkdir -p /tmp/nginx/

COPY files/nginx.conf /etc/nginx/nginx.conf   #
COPY files/default.conf /etc/nginx/conf.d/default.conf
ADD files/html.tar.gz /usr/share/nginx/

EXPOSE 80/tcp

ENTRYPOINT ["nginx"]
CMD ["-g", "daemon off;"]
=============

